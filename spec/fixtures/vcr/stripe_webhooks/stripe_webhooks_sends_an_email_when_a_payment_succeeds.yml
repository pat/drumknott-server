---
http_interactions:
- request:
    method: get
    uri: https://api.stripe.com/v1/customers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_dXCeU7rPnvbtEG","request_duration_ms":384}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:00 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '872'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_7rKQl2ab4dKgou
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "object": "list",
          "data": [
            {
              "id": "cus_PhgjmHBr29UDoF",
              "object": "customer",
              "address": null,
              "balance": 0,
              "created": 1709957892,
              "currency": "usd",
              "default_source": "card_0OsHMPkKe4kFpYbdsvgoo15T",
              "delinquent": true,
              "description": null,
              "discount": null,
              "email": "search0002@drumknottsearch.com",
              "invoice_prefix": "9E58314F",
              "invoice_settings": {
                "custom_fields": null,
                "default_payment_method": null,
                "footer": null,
                "rendering_options": null
              },
              "livemode": false,
              "metadata": {},
              "name": null,
              "next_invoice_sequence": 3,
              "phone": null,
              "preferred_locales": [],
              "shipping": null,
              "tax_exempt": "none",
              "test_clock": null
            }
          ],
          "has_more": false,
          "url": "/v1/customers"
        }
  recorded_at: Sat, 09 Mar 2024 04:29:00 GMT
- request:
    method: delete
    uri: https://api.stripe.com/v1/customers/cus_PhgjmHBr29UDoF
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_7rKQl2ab4dKgou","request_duration_ms":443}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:01 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '75'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers%2F%3Acustomer;
        block-all-mixed-content; default-src 'none'; base-uri 'none'; form-action
        'none'; frame-ancestors 'none'; img-src 'self'; script-src 'self' 'report-sample';
        style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_KNVhLG2kbFdBow
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "cus_PhgjmHBr29UDoF",
          "object": "customer",
          "deleted": true
        }
  recorded_at: Sat, 09 Mar 2024 04:29:01 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/coupons
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_KNVhLG2kbFdBow","request_duration_ms":610}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:01 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '81'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcoupons; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_WUswsmi1bcVTQ1
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "object": "list",
          "data": [],
          "has_more": false,
          "url": "/v1/coupons"
        }
  recorded_at: Sat, 09 Mar 2024 04:29:01 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/customers
    body:
      encoding: UTF-8
      string: email=search0003%40drumknottsearch.com
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_WUswsmi1bcVTQ1","request_duration_ms":308}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:02 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '642'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Idempotency-Key:
      - d1811943-79b5-457d-a48f-dfaa03c8720a
      Original-Request:
      - req_DJhIVLwBuiOd9a
      Request-Id:
      - req_DJhIVLwBuiOd9a
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "cus_PhguPmroz4eSWX",
          "object": "customer",
          "address": null,
          "balance": 0,
          "created": 1709958541,
          "currency": null,
          "default_source": null,
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0003@drumknottsearch.com",
          "invoice_prefix": "4864037E",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null,
            "rendering_options": null
          },
          "livemode": false,
          "metadata": {},
          "name": null,
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [],
          "shipping": null,
          "tax_exempt": "none",
          "test_clock": null
        }
  recorded_at: Sat, 09 Mar 2024 04:29:01 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/tokens
    body:
      encoding: UTF-8
      string: card[number]=4242424242424242&card[exp_month]=1&card[exp_year]=2026&card[cvc]=123
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_DJhIVLwBuiOd9a","request_duration_ms":396}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:02 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '849'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Ftokens; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Idempotency-Key:
      - 1677a1fb-2255-489e-aa14-36e1eed0c82e
      Original-Request:
      - req_Na6TvDuNCeKaEB
      Request-Id:
      - req_Na6TvDuNCeKaEB
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "tok_0OsHWskKe4kFpYbdOrLO775L",
          "object": "token",
          "card": {
            "id": "card_0OsHWskKe4kFpYbdXEDj15la",
            "object": "card",
            "address_city": null,
            "address_country": null,
            "address_line1": null,
            "address_line1_check": null,
            "address_line2": null,
            "address_state": null,
            "address_zip": null,
            "address_zip_check": null,
            "brand": "Visa",
            "country": "US",
            "cvc_check": "unchecked",
            "dynamic_last4": null,
            "exp_month": 1,
            "exp_year": 2026,
            "fingerprint": "DCZbB0jNI6O56OrA",
            "funding": "credit",
            "last4": "4242",
            "metadata": {},
            "name": null,
            "networks": {
              "preferred": null
            },
            "tokenization_method": null,
            "wallet": null
          },
          "client_ip": "180.150.37.147",
          "created": 1709958542,
          "livemode": false,
          "type": "card",
          "used": false
        }
  recorded_at: Sat, 09 Mar 2024 04:29:02 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/customers/cus_PhguPmroz4eSWX/sources
    body:
      encoding: UTF-8
      string: source=tok_0OsHWskKe4kFpYbdOrLO775L
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_Na6TvDuNCeKaEB","request_duration_ms":509}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:03 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '594'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers%2F%3Acustomer%2Fsources;
        block-all-mixed-content; default-src 'none'; base-uri 'none'; form-action
        'none'; frame-ancestors 'none'; img-src 'self'; script-src 'self' 'report-sample';
        style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Idempotency-Key:
      - 2e7e80cb-9a18-49db-9bdf-d22aa218d6ba
      Original-Request:
      - req_dM76UlPtriaku8
      Request-Id:
      - req_dM76UlPtriaku8
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "card_0OsHWskKe4kFpYbdXEDj15la",
          "object": "card",
          "address_city": null,
          "address_country": null,
          "address_line1": null,
          "address_line1_check": null,
          "address_line2": null,
          "address_state": null,
          "address_zip": null,
          "address_zip_check": null,
          "brand": "Visa",
          "country": "US",
          "customer": "cus_PhguPmroz4eSWX",
          "cvc_check": "pass",
          "dynamic_last4": null,
          "exp_month": 1,
          "exp_year": 2026,
          "fingerprint": "DCZbB0jNI6O56OrA",
          "funding": "credit",
          "last4": "4242",
          "metadata": {},
          "name": null,
          "tokenization_method": null,
          "wallet": null
        }
  recorded_at: Sat, 09 Mar 2024 04:29:03 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/customers/cus_PhguPmroz4eSWX
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_dM76UlPtriaku8","request_duration_ms":590}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:03 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '669'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers%2F%3Acustomer;
        block-all-mixed-content; default-src 'none'; base-uri 'none'; form-action
        'none'; frame-ancestors 'none'; img-src 'self'; script-src 'self' 'report-sample';
        style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_a9BTljEWgpqpMG
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "cus_PhguPmroz4eSWX",
          "object": "customer",
          "address": null,
          "balance": 0,
          "created": 1709958541,
          "currency": null,
          "default_source": "card_0OsHWskKe4kFpYbdXEDj15la",
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0003@drumknottsearch.com",
          "invoice_prefix": "4864037E",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null,
            "rendering_options": null
          },
          "livemode": false,
          "metadata": {},
          "name": null,
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [],
          "shipping": null,
          "tax_exempt": "none",
          "test_clock": null
        }
  recorded_at: Sat, 09 Mar 2024 04:29:03 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/customers/cus_PhguPmroz4eSWX/sources/card_0OsHWskKe4kFpYbdXEDj15la
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_a9BTljEWgpqpMG","request_duration_ms":319}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:03 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '594'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers%2F%3Acustomer%2Fsources%2F%3Aid;
        block-all-mixed-content; default-src 'none'; base-uri 'none'; form-action
        'none'; frame-ancestors 'none'; img-src 'self'; script-src 'self' 'report-sample';
        style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_LNT7i1Sbe8vt4h
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "card_0OsHWskKe4kFpYbdXEDj15la",
          "object": "card",
          "address_city": null,
          "address_country": null,
          "address_line1": null,
          "address_line1_check": null,
          "address_line2": null,
          "address_state": null,
          "address_zip": null,
          "address_zip_check": null,
          "brand": "Visa",
          "country": "US",
          "customer": "cus_PhguPmroz4eSWX",
          "cvc_check": "pass",
          "dynamic_last4": null,
          "exp_month": 1,
          "exp_year": 2026,
          "fingerprint": "DCZbB0jNI6O56OrA",
          "funding": "credit",
          "last4": "4242",
          "metadata": {},
          "name": null,
          "tokenization_method": null,
          "wallet": null
        }
  recorded_at: Sat, 09 Mar 2024 04:29:03 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/customers/cus_PhguPmroz4eSWX
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_LNT7i1Sbe8vt4h","request_duration_ms":307}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:04 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '669'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers%2F%3Acustomer;
        block-all-mixed-content; default-src 'none'; base-uri 'none'; form-action
        'none'; frame-ancestors 'none'; img-src 'self'; script-src 'self' 'report-sample';
        style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_X0IgrpgfhN2by4
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "cus_PhguPmroz4eSWX",
          "object": "customer",
          "address": null,
          "balance": 0,
          "created": 1709958541,
          "currency": null,
          "default_source": "card_0OsHWskKe4kFpYbdXEDj15la",
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0003@drumknottsearch.com",
          "invoice_prefix": "4864037E",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null,
            "rendering_options": null
          },
          "livemode": false,
          "metadata": {},
          "name": null,
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [],
          "shipping": null,
          "tax_exempt": "none",
          "test_clock": null
        }
  recorded_at: Sat, 09 Mar 2024 04:29:04 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/subscriptions
    body:
      encoding: UTF-8
      string: customer=cus_PhguPmroz4eSWX&plan=drumknott
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_X0IgrpgfhN2by4","request_duration_ms":290}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:06 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '4114'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fsubscriptions; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Idempotency-Key:
      - e21ea9b9-0f2a-4588-ac57-56eef2ad4a9a
      Original-Request:
      - req_YJRyVUz7UqpLpz
      Request-Id:
      - req_YJRyVUz7UqpLpz
      Stripe-Should-Retry:
      - 'false'
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "sub_0OsHWukKe4kFpYbd9Qf97Ulj",
          "object": "subscription",
          "application": null,
          "application_fee_percent": null,
          "automatic_tax": {
            "enabled": false,
            "liability": null
          },
          "billing_cycle_anchor": 1709958544,
          "billing_cycle_anchor_config": null,
          "billing_thresholds": null,
          "cancel_at": null,
          "cancel_at_period_end": false,
          "canceled_at": null,
          "cancellation_details": {
            "comment": null,
            "feedback": null,
            "reason": null
          },
          "collection_method": "charge_automatically",
          "created": 1709958544,
          "currency": "usd",
          "current_period_end": 1712636944,
          "current_period_start": 1709958544,
          "customer": "cus_PhguPmroz4eSWX",
          "days_until_due": null,
          "default_payment_method": null,
          "default_source": null,
          "default_tax_rates": [],
          "description": null,
          "discount": null,
          "ended_at": null,
          "invoice_settings": {
            "account_tax_ids": null,
            "issuer": {
              "type": "self"
            }
          },
          "items": {
            "object": "list",
            "data": [
              {
                "id": "si_Phgu5BvtCnOq3h",
                "object": "subscription_item",
                "billing_thresholds": null,
                "created": 1709958544,
                "metadata": {},
                "plan": {
                  "id": "drumknott",
                  "object": "plan",
                  "active": true,
                  "aggregate_usage": null,
                  "amount": 300,
                  "amount_decimal": "300",
                  "billing_scheme": "per_unit",
                  "created": 1604809947,
                  "currency": "usd",
                  "interval": "month",
                  "interval_count": 1,
                  "livemode": false,
                  "metadata": {},
                  "nickname": null,
                  "product": "prod_ILnAkJFwBWFPnl",
                  "tiers_mode": null,
                  "transform_usage": null,
                  "trial_period_days": null,
                  "usage_type": "licensed"
                },
                "price": {
                  "id": "drumknott",
                  "object": "price",
                  "active": true,
                  "billing_scheme": "per_unit",
                  "created": 1604809947,
                  "currency": "usd",
                  "custom_unit_amount": null,
                  "livemode": false,
                  "lookup_key": null,
                  "metadata": {},
                  "nickname": null,
                  "product": "prod_ILnAkJFwBWFPnl",
                  "recurring": {
                    "aggregate_usage": null,
                    "interval": "month",
                    "interval_count": 1,
                    "trial_period_days": null,
                    "usage_type": "licensed"
                  },
                  "tax_behavior": "unspecified",
                  "tiers_mode": null,
                  "transform_quantity": null,
                  "type": "recurring",
                  "unit_amount": 300,
                  "unit_amount_decimal": "300"
                },
                "quantity": 1,
                "subscription": "sub_0OsHWukKe4kFpYbd9Qf97Ulj",
                "tax_rates": []
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/subscription_items?subscription=sub_0OsHWukKe4kFpYbd9Qf97Ulj"
          },
          "latest_invoice": "in_0OsHWukKe4kFpYbd2C9n6ywc",
          "livemode": false,
          "metadata": {},
          "next_pending_invoice_item_invoice": null,
          "on_behalf_of": null,
          "pause_collection": null,
          "payment_settings": {
            "payment_method_options": null,
            "payment_method_types": null,
            "save_default_payment_method": "off"
          },
          "pending_invoice_item_interval": null,
          "pending_setup_intent": null,
          "pending_update": null,
          "plan": {
            "id": "drumknott",
            "object": "plan",
            "active": true,
            "aggregate_usage": null,
            "amount": 300,
            "amount_decimal": "300",
            "billing_scheme": "per_unit",
            "created": 1604809947,
            "currency": "usd",
            "interval": "month",
            "interval_count": 1,
            "livemode": false,
            "metadata": {},
            "nickname": null,
            "product": "prod_ILnAkJFwBWFPnl",
            "tiers_mode": null,
            "transform_usage": null,
            "trial_period_days": null,
            "usage_type": "licensed"
          },
          "quantity": 1,
          "schedule": null,
          "start_date": 1709958544,
          "status": "active",
          "test_clock": null,
          "transfer_data": null,
          "trial_end": null,
          "trial_settings": {
            "end_behavior": {
              "missing_payment_method": "create_invoice"
            }
          },
          "trial_start": null
        }
  recorded_at: Sat, 09 Mar 2024 04:29:06 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/customers/cus_PhguPmroz4eSWX
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_YJRyVUz7UqpLpz","request_duration_ms":2099}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:06 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '670'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fcustomers%2F%3Acustomer;
        block-all-mixed-content; default-src 'none'; base-uri 'none'; form-action
        'none'; frame-ancestors 'none'; img-src 'self'; script-src 'self' 'report-sample';
        style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_nhXFi7LSxc6U0o
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |-
        {
          "id": "cus_PhguPmroz4eSWX",
          "object": "customer",
          "address": null,
          "balance": 0,
          "created": 1709958541,
          "currency": "usd",
          "default_source": "card_0OsHWskKe4kFpYbdXEDj15la",
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0003@drumknottsearch.com",
          "invoice_prefix": "4864037E",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null,
            "rendering_options": null
          },
          "livemode": false,
          "metadata": {},
          "name": null,
          "next_invoice_sequence": 2,
          "phone": null,
          "preferred_locales": [],
          "shipping": null,
          "tax_exempt": "none",
          "test_clock": null
        }
  recorded_at: Sat, 09 Mar 2024 04:29:06 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/invoices?customer=cus_PhguPmroz4eSWX
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_nhXFi7LSxc6U0o","request_duration_ms":253}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:06 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '6270'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Finvoices; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_0D6QZvZa8HcAwk
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJvYmplY3QiOiAibGlzdCIsCiAgImRhdGEiOiBbCiAgICB7CiAgICAgICJpZCI6ICJpbl8wT3NIV3VrS2U0a0ZwWWJkMkM5bjZ5d2MiLAogICAgICAib2JqZWN0IjogImludm9pY2UiLAogICAgICAiYWNjb3VudF9jb3VudHJ5IjogIkFVIiwKICAgICAgImFjY291bnRfbmFtZSI6ICJEcnVta25vdHQgU2VhcmNoIiwKICAgICAgImFjY291bnRfdGF4X2lkcyI6IG51bGwsCiAgICAgICJhbW91bnRfZHVlIjogMzAwLAogICAgICAiYW1vdW50X3BhaWQiOiAzMDAsCiAgICAgICJhbW91bnRfcmVtYWluaW5nIjogMCwKICAgICAgImFtb3VudF9zaGlwcGluZyI6IDAsCiAgICAgICJhcHBsaWNhdGlvbiI6IG51bGwsCiAgICAgICJhcHBsaWNhdGlvbl9mZWVfYW1vdW50IjogbnVsbCwKICAgICAgImF0dGVtcHRfY291bnQiOiAxLAogICAgICAiYXR0ZW1wdGVkIjogdHJ1ZSwKICAgICAgImF1dG9fYWR2YW5jZSI6IGZhbHNlLAogICAgICAiYXV0b21hdGljX3RheCI6IHsKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlLAogICAgICAgICJsaWFiaWxpdHkiOiBudWxsLAogICAgICAgICJzdGF0dXMiOiBudWxsCiAgICAgIH0sCiAgICAgICJiaWxsaW5nX3JlYXNvbiI6ICJzdWJzY3JpcHRpb25fY3JlYXRlIiwKICAgICAgImNoYXJnZSI6ICJjaF8yT3NIV3VrS2U0a0ZwWWJkMTFhYURmRDgiLAogICAgICAiY29sbGVjdGlvbl9tZXRob2QiOiAiY2hhcmdlX2F1dG9tYXRpY2FsbHkiLAogICAgICAiY3JlYXRlZCI6IDE3MDk5NTg1NDQsCiAgICAgICJjdXJyZW5jeSI6ICJ1c2QiLAogICAgICAiY3VzdG9tX2ZpZWxkcyI6IG51bGwsCiAgICAgICJjdXN0b21lciI6ICJjdXNfUGhndVBtcm96NGVTV1giLAogICAgICAiY3VzdG9tZXJfYWRkcmVzcyI6IG51bGwsCiAgICAgICJjdXN0b21lcl9lbWFpbCI6ICJzZWFyY2gwMDAzQGRydW1rbm90dHNlYXJjaC5jb20iLAogICAgICAiY3VzdG9tZXJfbmFtZSI6IG51bGwsCiAgICAgICJjdXN0b21lcl9waG9uZSI6IG51bGwsCiAgICAgICJjdXN0b21lcl9zaGlwcGluZyI6IG51bGwsCiAgICAgICJjdXN0b21lcl90YXhfZXhlbXB0IjogIm5vbmUiLAogICAgICAiY3VzdG9tZXJfdGF4X2lkcyI6IFtdLAogICAgICAiZGVmYXVsdF9wYXltZW50X21ldGhvZCI6IG51bGwsCiAgICAgICJkZWZhdWx0X3NvdXJjZSI6IG51bGwsCiAgICAgICJkZWZhdWx0X3RheF9yYXRlcyI6IFtdLAogICAgICAiZGVzY3JpcHRpb24iOiBudWxsLAogICAgICAiZGlzY291bnQiOiBudWxsLAogICAgICAiZGlzY291bnRzIjogW10sCiAgICAgICJkdWVfZGF0ZSI6IG51bGwsCiAgICAgICJlZmZlY3RpdmVfYXQiOiAxNzA5OTU4NTQ0LAogICAgICAiZW5kaW5nX2JhbGFuY2UiOiAwLAogICAgICAiZm9vdGVyIjogbnVsbCwKICAgICAgImZyb21faW52b2ljZSI6IG51bGwsCiAgICAgICJob3N0ZWRfaW52b2ljZV91cmwiOiAiaHR0cHM6Ly9pbnZvaWNlLnN0cmlwZS5jb20vaS9rS2U0a0ZwWWJkTDZ1UkY3MVRsSHZzT1F6aWJUWVJVMC90ZXN0X2EwdGxOR3RHY0ZsaVpFdzJkVkpHTnpGVWJFaDJjMDlSZW1saVZGbFNWVEFzWDFCb1ozVkVObE5OV2xkaE5FaHZVVlpwYUZCdVZtcGllVW93UW5OdWQza3NNVEF3TkRrNU16UTIwMjAwNE9JZHZ4VkE/cz1hcCIsCiAgICAgICJpbnZvaWNlX3BkZiI6ICJodHRwczovL3BheS5zdHJpcGUuY29tL2ludm9pY2Uva0tlNGtGcFliZEw2dVJGNzFUbEh2c09RemliVFlSVTAvdGVzdF9hMHRsTkd0R2NGbGlaRXcyZFZKR056RlViRWgyYzA5UmVtbGlWRmxTVlRBc1gxQm9aM1ZFTmxOTldsZGhORWh2VVZacGFGQnVWbXBpZVVvd1FuTnVkM2tzTVRBd05EazVNelEyMDIwMDRPSWR2eFZBL3BkZj9zPWFwIiwKICAgICAgImlzc3VlciI6IHsKICAgICAgICAidHlwZSI6ICJzZWxmIgogICAgICB9LAogICAgICAibGFzdF9maW5hbGl6YXRpb25fZXJyb3IiOiBudWxsLAogICAgICAibGF0ZXN0X3JldmlzaW9uIjogbnVsbCwKICAgICAgImxpbmVzIjogewogICAgICAgICJvYmplY3QiOiAibGlzdCIsCiAgICAgICAgImRhdGEiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJpZCI6ICJpbF8wT3NIV3VrS2U0a0ZwWWJkSTl3MzRGTk4iLAogICAgICAgICAgICAib2JqZWN0IjogImxpbmVfaXRlbSIsCiAgICAgICAgICAgICJhbW91bnQiOiAzMDAsCiAgICAgICAgICAgICJhbW91bnRfZXhjbHVkaW5nX3RheCI6IDMwMCwKICAgICAgICAgICAgImN1cnJlbmN5IjogInVzZCIsCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIxIMOXIERydW1rbm90dCBUZXN0IChhdCAkMy4wMCAvIG1vbnRoKSIsCiAgICAgICAgICAgICJkaXNjb3VudF9hbW91bnRzIjogW10sCiAgICAgICAgICAgICJkaXNjb3VudGFibGUiOiB0cnVlLAogICAgICAgICAgICAiZGlzY291bnRzIjogW10sCiAgICAgICAgICAgICJpbnZvaWNlIjogImluXzBPc0hXdWtLZTRrRnBZYmQyQzluNnl3YyIsCiAgICAgICAgICAgICJsaXZlbW9kZSI6IGZhbHNlLAogICAgICAgICAgICAibWV0YWRhdGEiOiB7fSwKICAgICAgICAgICAgInBlcmlvZCI6IHsKICAgICAgICAgICAgICAiZW5kIjogMTcxMjYzNjk0NCwKICAgICAgICAgICAgICAic3RhcnQiOiAxNzA5OTU4NTQ0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwbGFuIjogewogICAgICAgICAgICAgICJpZCI6ICJkcnVta25vdHQiLAogICAgICAgICAgICAgICJvYmplY3QiOiAicGxhbiIsCiAgICAgICAgICAgICAgImFjdGl2ZSI6IHRydWUsCiAgICAgICAgICAgICAgImFnZ3JlZ2F0ZV91c2FnZSI6IG51bGwsCiAgICAgICAgICAgICAgImFtb3VudCI6IDMwMCwKICAgICAgICAgICAgICAiYW1vdW50X2RlY2ltYWwiOiAiMzAwIiwKICAgICAgICAgICAgICAiYmlsbGluZ19zY2hlbWUiOiAicGVyX3VuaXQiLAogICAgICAgICAgICAgICJjcmVhdGVkIjogMTYwNDgwOTk0NywKICAgICAgICAgICAgICAiY3VycmVuY3kiOiAidXNkIiwKICAgICAgICAgICAgICAiaW50ZXJ2YWwiOiAibW9udGgiLAogICAgICAgICAgICAgICJpbnRlcnZhbF9jb3VudCI6IDEsCiAgICAgICAgICAgICAgImxpdmVtb2RlIjogZmFsc2UsCiAgICAgICAgICAgICAgIm1ldGFkYXRhIjoge30sCiAgICAgICAgICAgICAgIm5pY2tuYW1lIjogbnVsbCwKICAgICAgICAgICAgICAicHJvZHVjdCI6ICJwcm9kX0lMbkFrSkZ3QldGUG5sIiwKICAgICAgICAgICAgICAidGllcnNfbW9kZSI6IG51bGwsCiAgICAgICAgICAgICAgInRyYW5zZm9ybV91c2FnZSI6IG51bGwsCiAgICAgICAgICAgICAgInRyaWFsX3BlcmlvZF9kYXlzIjogbnVsbCwKICAgICAgICAgICAgICAidXNhZ2VfdHlwZSI6ICJsaWNlbnNlZCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInByaWNlIjogewogICAgICAgICAgICAgICJpZCI6ICJkcnVta25vdHQiLAogICAgICAgICAgICAgICJvYmplY3QiOiAicHJpY2UiLAogICAgICAgICAgICAgICJhY3RpdmUiOiB0cnVlLAogICAgICAgICAgICAgICJiaWxsaW5nX3NjaGVtZSI6ICJwZXJfdW5pdCIsCiAgICAgICAgICAgICAgImNyZWF0ZWQiOiAxNjA0ODA5OTQ3LAogICAgICAgICAgICAgICJjdXJyZW5jeSI6ICJ1c2QiLAogICAgICAgICAgICAgICJjdXN0b21fdW5pdF9hbW91bnQiOiBudWxsLAogICAgICAgICAgICAgICJsaXZlbW9kZSI6IGZhbHNlLAogICAgICAgICAgICAgICJsb29rdXBfa2V5IjogbnVsbCwKICAgICAgICAgICAgICAibWV0YWRhdGEiOiB7fSwKICAgICAgICAgICAgICAibmlja25hbWUiOiBudWxsLAogICAgICAgICAgICAgICJwcm9kdWN0IjogInByb2RfSUxuQWtKRndCV0ZQbmwiLAogICAgICAgICAgICAgICJyZWN1cnJpbmciOiB7CiAgICAgICAgICAgICAgICAiYWdncmVnYXRlX3VzYWdlIjogbnVsbCwKICAgICAgICAgICAgICAgICJpbnRlcnZhbCI6ICJtb250aCIsCiAgICAgICAgICAgICAgICAiaW50ZXJ2YWxfY291bnQiOiAxLAogICAgICAgICAgICAgICAgInRyaWFsX3BlcmlvZF9kYXlzIjogbnVsbCwKICAgICAgICAgICAgICAgICJ1c2FnZV90eXBlIjogImxpY2Vuc2VkIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInRheF9iZWhhdmlvciI6ICJ1bnNwZWNpZmllZCIsCiAgICAgICAgICAgICAgInRpZXJzX21vZGUiOiBudWxsLAogICAgICAgICAgICAgICJ0cmFuc2Zvcm1fcXVhbnRpdHkiOiBudWxsLAogICAgICAgICAgICAgICJ0eXBlIjogInJlY3VycmluZyIsCiAgICAgICAgICAgICAgInVuaXRfYW1vdW50IjogMzAwLAogICAgICAgICAgICAgICJ1bml0X2Ftb3VudF9kZWNpbWFsIjogIjMwMCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInByb3JhdGlvbiI6IGZhbHNlLAogICAgICAgICAgICAicHJvcmF0aW9uX2RldGFpbHMiOiB7CiAgICAgICAgICAgICAgImNyZWRpdGVkX2l0ZW1zIjogbnVsbAogICAgICAgICAgICB9LAogICAgICAgICAgICAicXVhbnRpdHkiOiAxLAogICAgICAgICAgICAic3Vic2NyaXB0aW9uIjogInN1Yl8wT3NIV3VrS2U0a0ZwWWJkOVFmOTdVbGoiLAogICAgICAgICAgICAic3Vic2NyaXB0aW9uX2l0ZW0iOiAic2lfUGhndTVCdnRDbk9xM2giLAogICAgICAgICAgICAidGF4X2Ftb3VudHMiOiBbXSwKICAgICAgICAgICAgInRheF9yYXRlcyI6IFtdLAogICAgICAgICAgICAidHlwZSI6ICJzdWJzY3JpcHRpb24iLAogICAgICAgICAgICAidW5pdF9hbW91bnRfZXhjbHVkaW5nX3RheCI6ICIzMDAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAiaGFzX21vcmUiOiBmYWxzZSwKICAgICAgICAidG90YWxfY291bnQiOiAxLAogICAgICAgICJ1cmwiOiAiL3YxL2ludm9pY2VzL2luXzBPc0hXdWtLZTRrRnBZYmQyQzluNnl3Yy9saW5lcyIKICAgICAgfSwKICAgICAgImxpdmVtb2RlIjogZmFsc2UsCiAgICAgICJtZXRhZGF0YSI6IHt9LAogICAgICAibmV4dF9wYXltZW50X2F0dGVtcHQiOiBudWxsLAogICAgICAibnVtYmVyIjogIjQ4NjQwMzdFLTAwMDEiLAogICAgICAib25fYmVoYWxmX29mIjogbnVsbCwKICAgICAgInBhaWQiOiB0cnVlLAogICAgICAicGFpZF9vdXRfb2ZfYmFuZCI6IGZhbHNlLAogICAgICAicGF5bWVudF9pbnRlbnQiOiAicGlfMk9zSFd1a0tlNGtGcFliZDFyZjRoU1NSIiwKICAgICAgInBheW1lbnRfc2V0dGluZ3MiOiB7CiAgICAgICAgImRlZmF1bHRfbWFuZGF0ZSI6IG51bGwsCiAgICAgICAgInBheW1lbnRfbWV0aG9kX29wdGlvbnMiOiBudWxsLAogICAgICAgICJwYXltZW50X21ldGhvZF90eXBlcyI6IG51bGwKICAgICAgfSwKICAgICAgInBlcmlvZF9lbmQiOiAxNzA5OTU4NTQ0LAogICAgICAicGVyaW9kX3N0YXJ0IjogMTcwOTk1ODU0NCwKICAgICAgInBvc3RfcGF5bWVudF9jcmVkaXRfbm90ZXNfYW1vdW50IjogMCwKICAgICAgInByZV9wYXltZW50X2NyZWRpdF9ub3Rlc19hbW91bnQiOiAwLAogICAgICAicXVvdGUiOiBudWxsLAogICAgICAicmVjZWlwdF9udW1iZXIiOiBudWxsLAogICAgICAicmVuZGVyaW5nIjogbnVsbCwKICAgICAgInJlbmRlcmluZ19vcHRpb25zIjogbnVsbCwKICAgICAgInNoaXBwaW5nX2Nvc3QiOiBudWxsLAogICAgICAic2hpcHBpbmdfZGV0YWlscyI6IG51bGwsCiAgICAgICJzdGFydGluZ19iYWxhbmNlIjogMCwKICAgICAgInN0YXRlbWVudF9kZXNjcmlwdG9yIjogbnVsbCwKICAgICAgInN0YXR1cyI6ICJwYWlkIiwKICAgICAgInN0YXR1c190cmFuc2l0aW9ucyI6IHsKICAgICAgICAiZmluYWxpemVkX2F0IjogMTcwOTk1ODU0NCwKICAgICAgICAibWFya2VkX3VuY29sbGVjdGlibGVfYXQiOiBudWxsLAogICAgICAgICJwYWlkX2F0IjogMTcwOTk1ODU0NCwKICAgICAgICAidm9pZGVkX2F0IjogbnVsbAogICAgICB9LAogICAgICAic3Vic2NyaXB0aW9uIjogInN1Yl8wT3NIV3VrS2U0a0ZwWWJkOVFmOTdVbGoiLAogICAgICAic3Vic2NyaXB0aW9uX2RldGFpbHMiOiB7CiAgICAgICAgIm1ldGFkYXRhIjoge30KICAgICAgfSwKICAgICAgInN1YnRvdGFsIjogMzAwLAogICAgICAic3VidG90YWxfZXhjbHVkaW5nX3RheCI6IDMwMCwKICAgICAgInRheCI6IG51bGwsCiAgICAgICJ0ZXN0X2Nsb2NrIjogbnVsbCwKICAgICAgInRvdGFsIjogMzAwLAogICAgICAidG90YWxfZGlzY291bnRfYW1vdW50cyI6IFtdLAogICAgICAidG90YWxfZXhjbHVkaW5nX3RheCI6IDMwMCwKICAgICAgInRvdGFsX3RheF9hbW91bnRzIjogW10sCiAgICAgICJ0cmFuc2Zlcl9kYXRhIjogbnVsbCwKICAgICAgIndlYmhvb2tzX2RlbGl2ZXJlZF9hdCI6IDE3MDk5NTg1NDQKICAgIH0KICBdLAogICJoYXNfbW9yZSI6IGZhbHNlLAogICJ1cmwiOiAiL3YxL2ludm9pY2VzIgp9
  recorded_at: Sat, 09 Mar 2024 04:29:06 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/events
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_0D6QZvZa8HcAwk","request_duration_ms":399}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:07 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '47050'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fevents; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_4aiVa7LX3mrv7m
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 09 Mar 2024 04:29:07 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/events
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/10.11.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_4aiVa7LX3mrv7m","request_duration_ms":544}}'
      Stripe-Version:
      - '2023-10-16'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"10.11.0","lang":"ruby","lang_version":"3.2.3 p157 (2024-01-18)","platform":"arm64-darwin23","engine":"ruby","publisher":"stripe","uname":"Darwin
        pancake.localdomain 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:30:44
        PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6000 arm64","hostname":"pancake.localdomain"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 09 Mar 2024 04:29:07 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '47050'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET,HEAD,PUT,PATCH,POST,DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, Stripe-Should-Retry, X-Stripe-External-Auth-Required,
        X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Content-Security-Policy:
      - report-uri https://q.stripe.com/csp-report?p=v1%2Fevents; block-all-mixed-content;
        default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none';
        img-src 'self'; script-src 'self' 'report-sample'; style-src 'self'
      Cross-Origin-Opener-Policy-Report-Only:
      - same-origin; report-to=https://q.stripe.com/coop-report
      Request-Id:
      - req_Ol0maE7rDVlFHS
      Stripe-Version:
      - '2023-10-16'
      Vary:
      - Origin
      X-Stripe-Routing-Context-Priority-Tier:
      - api-testmode
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 09 Mar 2024 04:29:07 GMT
recorded_with: VCR 6.2.0
