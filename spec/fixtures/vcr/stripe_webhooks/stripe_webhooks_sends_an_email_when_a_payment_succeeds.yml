---
http_interactions:
- request:
    method: get
    uri: https://api.stripe.com/v1/customers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_cFVyh0jZ39u50Z","request_duration_ms":544}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:41 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '2353'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_iDAjRFfcoaurPv
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "object": "list",
          "data": [
            {
              "id": "cus_ILmfizk84bZwfv",
              "object": "customer",
              "account_balance": 0,
              "address": null,
              "balance": 0,
              "created": 1604808091,
              "currency": "usd",
              "default_source": "card_0Hl55skKe4kFpYbdBJecwYb6",
              "delinquent": false,
              "description": null,
              "discount": null,
              "email": "search0025@drumknottsearch.com",
              "invoice_prefix": "DC217C5E",
              "invoice_settings": {
                "custom_fields": null,
                "default_payment_method": null,
                "footer": null
              },
              "livemode": false,
              "metadata": {
              },
              "name": null,
              "next_invoice_sequence": 2,
              "phone": null,
              "preferred_locales": [

              ],
              "shipping": null,
              "sources": {
                "object": "list",
                "data": [
                  {
                    "id": "card_0Hl55skKe4kFpYbdBJecwYb6",
                    "object": "card",
                    "address_city": null,
                    "address_country": null,
                    "address_line1": null,
                    "address_line1_check": null,
                    "address_line2": null,
                    "address_state": null,
                    "address_zip": null,
                    "address_zip_check": null,
                    "brand": "Visa",
                    "country": "US",
                    "customer": "cus_ILmfizk84bZwfv",
                    "cvc_check": "pass",
                    "dynamic_last4": null,
                    "exp_month": 1,
                    "exp_year": 2022,
                    "fingerprint": "DCZbB0jNI6O56OrA",
                    "funding": "credit",
                    "last4": "4242",
                    "metadata": {
                    },
                    "name": null,
                    "tokenization_method": null
                  }
                ],
                "has_more": false,
                "total_count": 1,
                "url": "/v1/customers/cus_ILmfizk84bZwfv/sources"
              },
              "subscriptions": {
                "object": "list",
                "data": [

                ],
                "has_more": false,
                "total_count": 0,
                "url": "/v1/customers/cus_ILmfizk84bZwfv/subscriptions"
              },
              "tax_exempt": "none",
              "tax_ids": {
                "object": "list",
                "data": [

                ],
                "has_more": false,
                "total_count": 0,
                "url": "/v1/customers/cus_ILmfizk84bZwfv/tax_ids"
              },
              "tax_info": null,
              "tax_info_verification": null
            }
          ],
          "has_more": false,
          "url": "/v1/customers"
        }
  recorded_at: Sun, 08 Nov 2020 04:01:41 GMT
- request:
    method: delete
    uri: https://api.stripe.com/v1/customers/cus_ILmfizk84bZwfv
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_iDAjRFfcoaurPv","request_duration_ms":479}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:41 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '76'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_XN17HC1HB4Hj2V
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_ILmfizk84bZwfv",
          "object": "customer",
          "deleted": true
        }
  recorded_at: Sun, 08 Nov 2020 04:01:41 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/coupons
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_XN17HC1HB4Hj2V","request_duration_ms":554}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '86'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_hXpCVdpcfwqOce
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "object": "list",
          "data": [

          ],
          "has_more": false,
          "url": "/v1/coupons"
        }
  recorded_at: Sun, 08 Nov 2020 04:01:42 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/plans
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_hXpCVdpcfwqOce","request_duration_ms":690}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:42 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '721'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_Cj474J1MLlXFce
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "object": "list",
          "data": [
            {
              "id": "drumknott",
              "object": "plan",
              "active": true,
              "aggregate_usage": null,
              "amount": 300,
              "amount_decimal": "300",
              "billing_scheme": "per_unit",
              "created": 1604808091,
              "currency": "usd",
              "interval": "month",
              "interval_count": 1,
              "livemode": false,
              "metadata": {
              },
              "name": "Drumknott Test",
              "nickname": null,
              "product": "prod_ILmf9KUPH81oQh",
              "statement_descriptor": null,
              "tiers": null,
              "tiers_mode": null,
              "transform_usage": null,
              "trial_period_days": null,
              "usage_type": "licensed"
            }
          ],
          "has_more": false,
          "url": "/v1/plans"
        }
  recorded_at: Sun, 08 Nov 2020 04:01:42 GMT
- request:
    method: delete
    uri: https://api.stripe.com/v1/plans/drumknott
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_Cj474J1MLlXFce","request_duration_ms":619}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:43 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '63'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_mb8T8eUNyIZ0jV
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "drumknott",
          "object": "plan",
          "deleted": true
        }
  recorded_at: Sun, 08 Nov 2020 04:01:43 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/plans
    body:
      encoding: UTF-8
      string: id=drumknott&amount=300&currency=USD&interval=month&interval_count=1&name=Drumknott+Test
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_mb8T8eUNyIZ0jV","request_duration_ms":457}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:43 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '538'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_J2x4A9tvFcL14J
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "drumknott",
          "object": "plan",
          "active": true,
          "aggregate_usage": null,
          "amount": 300,
          "amount_decimal": "300",
          "billing_scheme": "per_unit",
          "created": 1604808103,
          "currency": "usd",
          "interval": "month",
          "interval_count": 1,
          "livemode": false,
          "metadata": {
          },
          "name": "Drumknott Test",
          "nickname": null,
          "product": "prod_ILmfjcoTmPdnnv",
          "statement_descriptor": null,
          "tiers": null,
          "tiers_mode": null,
          "transform_usage": null,
          "trial_period_days": null,
          "usage_type": "licensed"
        }
  recorded_at: Sun, 08 Nov 2020 04:01:44 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/customers
    body:
      encoding: UTF-8
      string: email=search0026%40drumknottsearch.com
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_J2x4A9tvFcL14J","request_duration_ms":771}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:44 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '1175'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_TAFMAFLoMmHXTx
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_ILmfpYmaN2IX90",
          "object": "customer",
          "account_balance": 0,
          "address": null,
          "balance": 0,
          "created": 1604808104,
          "currency": null,
          "default_source": null,
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0026@drumknottsearch.com",
          "invoice_prefix": "5F5E4176",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null
          },
          "livemode": false,
          "metadata": {
          },
          "name": null,
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [

          ],
          "shipping": null,
          "sources": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/sources"
          },
          "subscriptions": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/subscriptions"
          },
          "tax_exempt": "none",
          "tax_ids": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/tax_ids"
          },
          "tax_info": null,
          "tax_info_verification": null
        }
  recorded_at: Sun, 08 Nov 2020 04:01:44 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/tokens
    body:
      encoding: UTF-8
      string: card[number]=4242424242424242&card[exp_month]=1&card[exp_year]=2022&card[cvc]=123
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_TAFMAFLoMmHXTx","request_duration_ms":593}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:45 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '785'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_AvrmoYXdPq2h0V
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "tok_0Hl565kKe4kFpYbd5EBGMMhw",
          "object": "token",
          "card": {
            "id": "card_0Hl565kKe4kFpYbdLSS3XWbS",
            "object": "card",
            "address_city": null,
            "address_country": null,
            "address_line1": null,
            "address_line1_check": null,
            "address_line2": null,
            "address_state": null,
            "address_zip": null,
            "address_zip_check": null,
            "brand": "Visa",
            "country": "US",
            "cvc_check": "unchecked",
            "dynamic_last4": null,
            "exp_month": 1,
            "exp_year": 2022,
            "fingerprint": "DCZbB0jNI6O56OrA",
            "funding": "credit",
            "last4": "4242",
            "metadata": {
            },
            "name": null,
            "tokenization_method": null
          },
          "client_ip": "1.136.106.142",
          "created": 1604808105,
          "livemode": false,
          "type": "card",
          "used": false
        }
  recorded_at: Sun, 08 Nov 2020 04:01:45 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/customers/cus_ILmfpYmaN2IX90/sources
    body:
      encoding: UTF-8
      string: source=tok_0Hl565kKe4kFpYbd5EBGMMhw
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_AvrmoYXdPq2h0V","request_duration_ms":624}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:46 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '580'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_2NGQsi1mELgVvv
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "card_0Hl565kKe4kFpYbdLSS3XWbS",
          "object": "card",
          "address_city": null,
          "address_country": null,
          "address_line1": null,
          "address_line1_check": null,
          "address_line2": null,
          "address_state": null,
          "address_zip": null,
          "address_zip_check": null,
          "brand": "Visa",
          "country": "US",
          "customer": "cus_ILmfpYmaN2IX90",
          "cvc_check": "pass",
          "dynamic_last4": null,
          "exp_month": 1,
          "exp_year": 2022,
          "fingerprint": "DCZbB0jNI6O56OrA",
          "funding": "credit",
          "last4": "4242",
          "metadata": {
          },
          "name": null,
          "tokenization_method": null
        }
  recorded_at: Sun, 08 Nov 2020 04:01:47 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/customers/cus_ILmfpYmaN2IX90
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_2NGQsi1mELgVvv","request_duration_ms":1831}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:47 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '1937'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_bPsYotODFfO4m3
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_ILmfpYmaN2IX90",
          "object": "customer",
          "account_balance": 0,
          "address": null,
          "balance": 0,
          "created": 1604808104,
          "currency": null,
          "default_source": "card_0Hl565kKe4kFpYbdLSS3XWbS",
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0026@drumknottsearch.com",
          "invoice_prefix": "5F5E4176",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null
          },
          "livemode": false,
          "metadata": {
          },
          "name": null,
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [

          ],
          "shipping": null,
          "sources": {
            "object": "list",
            "data": [
              {
                "id": "card_0Hl565kKe4kFpYbdLSS3XWbS",
                "object": "card",
                "address_city": null,
                "address_country": null,
                "address_line1": null,
                "address_line1_check": null,
                "address_line2": null,
                "address_state": null,
                "address_zip": null,
                "address_zip_check": null,
                "brand": "Visa",
                "country": "US",
                "customer": "cus_ILmfpYmaN2IX90",
                "cvc_check": "pass",
                "dynamic_last4": null,
                "exp_month": 1,
                "exp_year": 2022,
                "fingerprint": "DCZbB0jNI6O56OrA",
                "funding": "credit",
                "last4": "4242",
                "metadata": {
                },
                "name": null,
                "tokenization_method": null
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/sources"
          },
          "subscriptions": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/subscriptions"
          },
          "tax_exempt": "none",
          "tax_ids": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/tax_ids"
          },
          "tax_info": null,
          "tax_info_verification": null
        }
  recorded_at: Sun, 08 Nov 2020 04:01:47 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/customers/cus_ILmfpYmaN2IX90
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_bPsYotODFfO4m3","request_duration_ms":622}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:48 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '1937'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_SKwDXc5nMY1zU1
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_ILmfpYmaN2IX90",
          "object": "customer",
          "account_balance": 0,
          "address": null,
          "balance": 0,
          "created": 1604808104,
          "currency": null,
          "default_source": "card_0Hl565kKe4kFpYbdLSS3XWbS",
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0026@drumknottsearch.com",
          "invoice_prefix": "5F5E4176",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null
          },
          "livemode": false,
          "metadata": {
          },
          "name": null,
          "next_invoice_sequence": 1,
          "phone": null,
          "preferred_locales": [

          ],
          "shipping": null,
          "sources": {
            "object": "list",
            "data": [
              {
                "id": "card_0Hl565kKe4kFpYbdLSS3XWbS",
                "object": "card",
                "address_city": null,
                "address_country": null,
                "address_line1": null,
                "address_line1_check": null,
                "address_line2": null,
                "address_state": null,
                "address_zip": null,
                "address_zip_check": null,
                "brand": "Visa",
                "country": "US",
                "customer": "cus_ILmfpYmaN2IX90",
                "cvc_check": "pass",
                "dynamic_last4": null,
                "exp_month": 1,
                "exp_year": 2022,
                "fingerprint": "DCZbB0jNI6O56OrA",
                "funding": "credit",
                "last4": "4242",
                "metadata": {
                },
                "name": null,
                "tokenization_method": null
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/sources"
          },
          "subscriptions": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/subscriptions"
          },
          "tax_exempt": "none",
          "tax_ids": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/tax_ids"
          },
          "tax_info": null,
          "tax_info_verification": null
        }
  recorded_at: Sun, 08 Nov 2020 04:01:48 GMT
- request:
    method: post
    uri: https://api.stripe.com/v1/customers/cus_ILmfpYmaN2IX90/subscriptions
    body:
      encoding: UTF-8
      string: plan=drumknott
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_SKwDXc5nMY1zU1","request_duration_ms":455}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '3754'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_TeqEucniYkE0bW
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "sub_ILmfQpGqW0PMNt",
          "object": "subscription",
          "application_fee_percent": null,
          "billing": "charge_automatically",
          "billing_cycle_anchor": 1604808108,
          "billing_thresholds": null,
          "cancel_at": null,
          "cancel_at_period_end": false,
          "canceled_at": null,
          "collection_method": "charge_automatically",
          "created": 1604808108,
          "current_period_end": 1607400108,
          "current_period_start": 1604808108,
          "customer": "cus_ILmfpYmaN2IX90",
          "days_until_due": null,
          "default_payment_method": null,
          "default_source": null,
          "default_tax_rates": [

          ],
          "discount": null,
          "ended_at": null,
          "invoice_customer_balance_settings": {
            "consume_applied_balance_on_void": true
          },
          "items": {
            "object": "list",
            "data": [
              {
                "id": "si_ILmfiDePuqIe9P",
                "object": "subscription_item",
                "billing_thresholds": null,
                "created": 1604808109,
                "metadata": {
                },
                "plan": {
                  "id": "drumknott",
                  "object": "plan",
                  "active": true,
                  "aggregate_usage": null,
                  "amount": 300,
                  "amount_decimal": "300",
                  "billing_scheme": "per_unit",
                  "created": 1604808103,
                  "currency": "usd",
                  "interval": "month",
                  "interval_count": 1,
                  "livemode": false,
                  "metadata": {
                  },
                  "name": "Drumknott Test",
                  "nickname": null,
                  "product": "prod_ILmfjcoTmPdnnv",
                  "statement_descriptor": null,
                  "tiers": null,
                  "tiers_mode": null,
                  "transform_usage": null,
                  "trial_period_days": null,
                  "usage_type": "licensed"
                },
                "price": {
                  "id": "drumknott",
                  "object": "price",
                  "active": true,
                  "billing_scheme": "per_unit",
                  "created": 1604808103,
                  "currency": "usd",
                  "livemode": false,
                  "lookup_key": null,
                  "metadata": {
                  },
                  "nickname": null,
                  "product": "prod_ILmfjcoTmPdnnv",
                  "recurring": {
                    "aggregate_usage": null,
                    "interval": "month",
                    "interval_count": 1,
                    "trial_period_days": null,
                    "usage_type": "licensed"
                  },
                  "tiers_mode": null,
                  "transform_quantity": null,
                  "type": "recurring",
                  "unit_amount": 300,
                  "unit_amount_decimal": "300"
                },
                "quantity": 1,
                "subscription": "sub_ILmfQpGqW0PMNt",
                "tax_rates": [

                ]
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/subscription_items?subscription=sub_ILmfQpGqW0PMNt"
          },
          "latest_invoice": "in_0Hl568kKe4kFpYbdg5MOQkJe",
          "livemode": false,
          "metadata": {
          },
          "next_pending_invoice_item_invoice": null,
          "pause_collection": null,
          "pending_invoice_item_interval": null,
          "pending_setup_intent": null,
          "pending_update": null,
          "plan": {
            "id": "drumknott",
            "object": "plan",
            "active": true,
            "aggregate_usage": null,
            "amount": 300,
            "amount_decimal": "300",
            "billing_scheme": "per_unit",
            "created": 1604808103,
            "currency": "usd",
            "interval": "month",
            "interval_count": 1,
            "livemode": false,
            "metadata": {
            },
            "name": "Drumknott Test",
            "nickname": null,
            "product": "prod_ILmfjcoTmPdnnv",
            "statement_descriptor": null,
            "tiers": null,
            "tiers_mode": null,
            "transform_usage": null,
            "trial_period_days": null,
            "usage_type": "licensed"
          },
          "quantity": 1,
          "schedule": null,
          "start": 1604808108,
          "start_date": 1604808108,
          "status": "active",
          "tax_percent": null,
          "transfer_data": null,
          "trial_end": null,
          "trial_start": null
        }
  recorded_at: Sun, 08 Nov 2020 04:01:50 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/customers/cus_ILmfpYmaN2IX90
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_TeqEucniYkE0bW","request_duration_ms":1969}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:50 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '6531'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_QesNX9fgV5NHob
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: UTF-8
      string: |
        {
          "id": "cus_ILmfpYmaN2IX90",
          "object": "customer",
          "account_balance": 0,
          "address": null,
          "balance": 0,
          "created": 1604808104,
          "currency": "usd",
          "default_source": "card_0Hl565kKe4kFpYbdLSS3XWbS",
          "delinquent": false,
          "description": null,
          "discount": null,
          "email": "search0026@drumknottsearch.com",
          "invoice_prefix": "5F5E4176",
          "invoice_settings": {
            "custom_fields": null,
            "default_payment_method": null,
            "footer": null
          },
          "livemode": false,
          "metadata": {
          },
          "name": null,
          "next_invoice_sequence": 2,
          "phone": null,
          "preferred_locales": [

          ],
          "shipping": null,
          "sources": {
            "object": "list",
            "data": [
              {
                "id": "card_0Hl565kKe4kFpYbdLSS3XWbS",
                "object": "card",
                "address_city": null,
                "address_country": null,
                "address_line1": null,
                "address_line1_check": null,
                "address_line2": null,
                "address_state": null,
                "address_zip": null,
                "address_zip_check": null,
                "brand": "Visa",
                "country": "US",
                "customer": "cus_ILmfpYmaN2IX90",
                "cvc_check": "pass",
                "dynamic_last4": null,
                "exp_month": 1,
                "exp_year": 2022,
                "fingerprint": "DCZbB0jNI6O56OrA",
                "funding": "credit",
                "last4": "4242",
                "metadata": {
                },
                "name": null,
                "tokenization_method": null
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/sources"
          },
          "subscriptions": {
            "object": "list",
            "data": [
              {
                "id": "sub_ILmfQpGqW0PMNt",
                "object": "subscription",
                "application_fee_percent": null,
                "billing": "charge_automatically",
                "billing_cycle_anchor": 1604808108,
                "billing_thresholds": null,
                "cancel_at": null,
                "cancel_at_period_end": false,
                "canceled_at": null,
                "collection_method": "charge_automatically",
                "created": 1604808108,
                "current_period_end": 1607400108,
                "current_period_start": 1604808108,
                "customer": "cus_ILmfpYmaN2IX90",
                "days_until_due": null,
                "default_payment_method": null,
                "default_source": null,
                "default_tax_rates": [

                ],
                "discount": null,
                "ended_at": null,
                "invoice_customer_balance_settings": {
                  "consume_applied_balance_on_void": true
                },
                "items": {
                  "object": "list",
                  "data": [
                    {
                      "id": "si_ILmfiDePuqIe9P",
                      "object": "subscription_item",
                      "billing_thresholds": null,
                      "created": 1604808109,
                      "metadata": {
                      },
                      "plan": {
                        "id": "drumknott",
                        "object": "plan",
                        "active": true,
                        "aggregate_usage": null,
                        "amount": 300,
                        "amount_decimal": "300",
                        "billing_scheme": "per_unit",
                        "created": 1604808103,
                        "currency": "usd",
                        "interval": "month",
                        "interval_count": 1,
                        "livemode": false,
                        "metadata": {
                        },
                        "name": "Drumknott Test",
                        "nickname": null,
                        "product": "prod_ILmfjcoTmPdnnv",
                        "statement_descriptor": null,
                        "tiers": null,
                        "tiers_mode": null,
                        "transform_usage": null,
                        "trial_period_days": null,
                        "usage_type": "licensed"
                      },
                      "price": {
                        "id": "drumknott",
                        "object": "price",
                        "active": true,
                        "billing_scheme": "per_unit",
                        "created": 1604808103,
                        "currency": "usd",
                        "livemode": false,
                        "lookup_key": null,
                        "metadata": {
                        },
                        "nickname": null,
                        "product": "prod_ILmfjcoTmPdnnv",
                        "recurring": {
                          "aggregate_usage": null,
                          "interval": "month",
                          "interval_count": 1,
                          "trial_period_days": null,
                          "usage_type": "licensed"
                        },
                        "tiers_mode": null,
                        "transform_quantity": null,
                        "type": "recurring",
                        "unit_amount": 300,
                        "unit_amount_decimal": "300"
                      },
                      "quantity": 1,
                      "subscription": "sub_ILmfQpGqW0PMNt",
                      "tax_rates": [

                      ]
                    }
                  ],
                  "has_more": false,
                  "total_count": 1,
                  "url": "/v1/subscription_items?subscription=sub_ILmfQpGqW0PMNt"
                },
                "latest_invoice": "in_0Hl568kKe4kFpYbdg5MOQkJe",
                "livemode": false,
                "metadata": {
                },
                "next_pending_invoice_item_invoice": null,
                "pause_collection": null,
                "pending_invoice_item_interval": null,
                "pending_setup_intent": null,
                "pending_update": null,
                "plan": {
                  "id": "drumknott",
                  "object": "plan",
                  "active": true,
                  "aggregate_usage": null,
                  "amount": 300,
                  "amount_decimal": "300",
                  "billing_scheme": "per_unit",
                  "created": 1604808103,
                  "currency": "usd",
                  "interval": "month",
                  "interval_count": 1,
                  "livemode": false,
                  "metadata": {
                  },
                  "name": "Drumknott Test",
                  "nickname": null,
                  "product": "prod_ILmfjcoTmPdnnv",
                  "statement_descriptor": null,
                  "tiers": null,
                  "tiers_mode": null,
                  "transform_usage": null,
                  "trial_period_days": null,
                  "usage_type": "licensed"
                },
                "quantity": 1,
                "schedule": null,
                "start": 1604808108,
                "start_date": 1604808108,
                "status": "active",
                "tax_percent": null,
                "transfer_data": null,
                "trial_end": null,
                "trial_start": null
              }
            ],
            "has_more": false,
            "total_count": 1,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/subscriptions"
          },
          "tax_exempt": "none",
          "tax_ids": {
            "object": "list",
            "data": [

            ],
            "has_more": false,
            "total_count": 0,
            "url": "/v1/customers/cus_ILmfpYmaN2IX90/tax_ids"
          },
          "tax_info": null,
          "tax_info_verification": null
        }
  recorded_at: Sun, 08 Nov 2020 04:01:50 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/invoices?customer=cus_ILmfpYmaN2IX90
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_QesNX9fgV5NHob","request_duration_ms":597}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:51 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '5425'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_VAHDAHP5CuM2sb
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJvYmplY3QiOiAibGlzdCIsCiAgImRhdGEiOiBbCiAgICB7CiAgICAgICJpZCI6ICJpbl8wSGw1NjhrS2U0a0ZwWWJkZzVNT1FrSmUiLAogICAgICAib2JqZWN0IjogImludm9pY2UiLAogICAgICAiYWNjb3VudF9jb3VudHJ5IjogIkFVIiwKICAgICAgImFjY291bnRfbmFtZSI6ICJEcnVta25vdHQgU2VhcmNoIiwKICAgICAgImFjY291bnRfdGF4X2lkcyI6IG51bGwsCiAgICAgICJhbW91bnRfZHVlIjogMzAwLAogICAgICAiYW1vdW50X3BhaWQiOiAzMDAsCiAgICAgICJhbW91bnRfcmVtYWluaW5nIjogMCwKICAgICAgImFwcGxpY2F0aW9uX2ZlZSI6IG51bGwsCiAgICAgICJhdHRlbXB0X2NvdW50IjogMSwKICAgICAgImF0dGVtcHRlZCI6IHRydWUsCiAgICAgICJhdXRvX2FkdmFuY2UiOiBmYWxzZSwKICAgICAgImJpbGxpbmciOiAiY2hhcmdlX2F1dG9tYXRpY2FsbHkiLAogICAgICAiYmlsbGluZ19yZWFzb24iOiAic3Vic2NyaXB0aW9uX3VwZGF0ZSIsCiAgICAgICJjaGFyZ2UiOiAiY2hfMEhsNTY5a0tlNGtGcFliZEVYMnRRdFAwIiwKICAgICAgImNsb3NlZCI6IHRydWUsCiAgICAgICJjb2xsZWN0aW9uX21ldGhvZCI6ICJjaGFyZ2VfYXV0b21hdGljYWxseSIsCiAgICAgICJjcmVhdGVkIjogMTYwNDgwODEwOCwKICAgICAgImN1cnJlbmN5IjogInVzZCIsCiAgICAgICJjdXN0b21fZmllbGRzIjogbnVsbCwKICAgICAgImN1c3RvbWVyIjogImN1c19JTG1mcFltYU4ySVg5MCIsCiAgICAgICJjdXN0b21lcl9hZGRyZXNzIjogbnVsbCwKICAgICAgImN1c3RvbWVyX2VtYWlsIjogInNlYXJjaDAwMjZAZHJ1bWtub3R0c2VhcmNoLmNvbSIsCiAgICAgICJjdXN0b21lcl9uYW1lIjogbnVsbCwKICAgICAgImN1c3RvbWVyX3Bob25lIjogbnVsbCwKICAgICAgImN1c3RvbWVyX3NoaXBwaW5nIjogbnVsbCwKICAgICAgImN1c3RvbWVyX3RheF9leGVtcHQiOiAibm9uZSIsCiAgICAgICJjdXN0b21lcl90YXhfaWRzIjogWwoKICAgICAgXSwKICAgICAgImRhdGUiOiAxNjA0ODA4MTA4LAogICAgICAiZGVmYXVsdF9wYXltZW50X21ldGhvZCI6IG51bGwsCiAgICAgICJkZWZhdWx0X3NvdXJjZSI6IG51bGwsCiAgICAgICJkZWZhdWx0X3RheF9yYXRlcyI6IFsKCiAgICAgIF0sCiAgICAgICJkZXNjcmlwdGlvbiI6IG51bGwsCiAgICAgICJkaXNjb3VudCI6IG51bGwsCiAgICAgICJkaXNjb3VudHMiOiBbCgogICAgICBdLAogICAgICAiZHVlX2RhdGUiOiBudWxsLAogICAgICAiZW5kaW5nX2JhbGFuY2UiOiAwLAogICAgICAiZmluYWxpemVkX2F0IjogMTYwNDgwODEwOCwKICAgICAgImZvb3RlciI6IG51bGwsCiAgICAgICJmb3JnaXZlbiI6IGZhbHNlLAogICAgICAiaG9zdGVkX2ludm9pY2VfdXJsIjogImh0dHBzOi8vcGF5LnN0cmlwZS5jb20vaW52b2ljZS9rS2U0a0ZwWWJkTDZ1UkY3MVRsSHZzT1F6aWJUWVJVMC9pbnZzdF9JTG1mTWFJODdCUnVlUzRtdFNidnlhOE5GWkFCOG1UIiwKICAgICAgImludm9pY2VfcGRmIjogImh0dHBzOi8vcGF5LnN0cmlwZS5jb20vaW52b2ljZS9rS2U0a0ZwWWJkTDZ1UkY3MVRsSHZzT1F6aWJUWVJVMC9pbnZzdF9JTG1mTWFJODdCUnVlUzRtdFNidnlhOE5GWkFCOG1UL3BkZiIsCiAgICAgICJsaW5lcyI6IHsKICAgICAgICAib2JqZWN0IjogImxpc3QiLAogICAgICAgICJkYXRhIjogWwogICAgICAgICAgewogICAgICAgICAgICAiaWQiOiAic3ViX0lMbWZRcEdxVzBQTU50IiwKICAgICAgICAgICAgIm9iamVjdCI6ICJsaW5lX2l0ZW0iLAogICAgICAgICAgICAiYW1vdW50IjogMzAwLAogICAgICAgICAgICAiY3VycmVuY3kiOiAidXNkIiwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIjEgw5cgRHJ1bWtub3R0IFRlc3QgKGF0ICQzLjAwIC8gbW9udGgpIiwKICAgICAgICAgICAgImRpc2NvdW50X2Ftb3VudHMiOiBbCgogICAgICAgICAgICBdLAogICAgICAgICAgICAiZGlzY291bnRhYmxlIjogdHJ1ZSwKICAgICAgICAgICAgImRpc2NvdW50cyI6IFsKCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJsaXZlbW9kZSI6IGZhbHNlLAogICAgICAgICAgICAibWV0YWRhdGEiOiB7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJwZXJpb2QiOiB7CiAgICAgICAgICAgICAgImVuZCI6IDE2MDc0MDAxMDgsCiAgICAgICAgICAgICAgInN0YXJ0IjogMTYwNDgwODEwOAogICAgICAgICAgICB9LAogICAgICAgICAgICAicGxhbiI6IHsKICAgICAgICAgICAgICAiaWQiOiAiZHJ1bWtub3R0IiwKICAgICAgICAgICAgICAib2JqZWN0IjogInBsYW4iLAogICAgICAgICAgICAgICJhY3RpdmUiOiB0cnVlLAogICAgICAgICAgICAgICJhZ2dyZWdhdGVfdXNhZ2UiOiBudWxsLAogICAgICAgICAgICAgICJhbW91bnQiOiAzMDAsCiAgICAgICAgICAgICAgImFtb3VudF9kZWNpbWFsIjogIjMwMCIsCiAgICAgICAgICAgICAgImJpbGxpbmdfc2NoZW1lIjogInBlcl91bml0IiwKICAgICAgICAgICAgICAiY3JlYXRlZCI6IDE2MDQ4MDgxMDMsCiAgICAgICAgICAgICAgImN1cnJlbmN5IjogInVzZCIsCiAgICAgICAgICAgICAgImludGVydmFsIjogIm1vbnRoIiwKICAgICAgICAgICAgICAiaW50ZXJ2YWxfY291bnQiOiAxLAogICAgICAgICAgICAgICJsaXZlbW9kZSI6IGZhbHNlLAogICAgICAgICAgICAgICJtZXRhZGF0YSI6IHsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJuYW1lIjogIkRydW1rbm90dCBUZXN0IiwKICAgICAgICAgICAgICAibmlja25hbWUiOiBudWxsLAogICAgICAgICAgICAgICJwcm9kdWN0IjogInByb2RfSUxtZmpjb1RtUGRubnYiLAogICAgICAgICAgICAgICJzdGF0ZW1lbnRfZGVzY3JpcHRvciI6IG51bGwsCiAgICAgICAgICAgICAgInRpZXJzIjogbnVsbCwKICAgICAgICAgICAgICAidGllcnNfbW9kZSI6IG51bGwsCiAgICAgICAgICAgICAgInRyYW5zZm9ybV91c2FnZSI6IG51bGwsCiAgICAgICAgICAgICAgInRyaWFsX3BlcmlvZF9kYXlzIjogbnVsbCwKICAgICAgICAgICAgICAidXNhZ2VfdHlwZSI6ICJsaWNlbnNlZCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInByaWNlIjogewogICAgICAgICAgICAgICJpZCI6ICJkcnVta25vdHQiLAogICAgICAgICAgICAgICJvYmplY3QiOiAicHJpY2UiLAogICAgICAgICAgICAgICJhY3RpdmUiOiB0cnVlLAogICAgICAgICAgICAgICJiaWxsaW5nX3NjaGVtZSI6ICJwZXJfdW5pdCIsCiAgICAgICAgICAgICAgImNyZWF0ZWQiOiAxNjA0ODA4MTAzLAogICAgICAgICAgICAgICJjdXJyZW5jeSI6ICJ1c2QiLAogICAgICAgICAgICAgICJsaXZlbW9kZSI6IGZhbHNlLAogICAgICAgICAgICAgICJsb29rdXBfa2V5IjogbnVsbCwKICAgICAgICAgICAgICAibWV0YWRhdGEiOiB7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAibmlja25hbWUiOiBudWxsLAogICAgICAgICAgICAgICJwcm9kdWN0IjogInByb2RfSUxtZmpjb1RtUGRubnYiLAogICAgICAgICAgICAgICJyZWN1cnJpbmciOiB7CiAgICAgICAgICAgICAgICAiYWdncmVnYXRlX3VzYWdlIjogbnVsbCwKICAgICAgICAgICAgICAgICJpbnRlcnZhbCI6ICJtb250aCIsCiAgICAgICAgICAgICAgICAiaW50ZXJ2YWxfY291bnQiOiAxLAogICAgICAgICAgICAgICAgInRyaWFsX3BlcmlvZF9kYXlzIjogbnVsbCwKICAgICAgICAgICAgICAgICJ1c2FnZV90eXBlIjogImxpY2Vuc2VkIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgInRpZXJzX21vZGUiOiBudWxsLAogICAgICAgICAgICAgICJ0cmFuc2Zvcm1fcXVhbnRpdHkiOiBudWxsLAogICAgICAgICAgICAgICJ0eXBlIjogInJlY3VycmluZyIsCiAgICAgICAgICAgICAgInVuaXRfYW1vdW50IjogMzAwLAogICAgICAgICAgICAgICJ1bml0X2Ftb3VudF9kZWNpbWFsIjogIjMwMCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInByb3JhdGlvbiI6IGZhbHNlLAogICAgICAgICAgICAicXVhbnRpdHkiOiAxLAogICAgICAgICAgICAic3Vic2NyaXB0aW9uIjogbnVsbCwKICAgICAgICAgICAgInN1YnNjcmlwdGlvbl9pdGVtIjogInNpX0lMbWZpRGVQdXFJZTlQIiwKICAgICAgICAgICAgInRheF9hbW91bnRzIjogWwoKICAgICAgICAgICAgXSwKICAgICAgICAgICAgInRheF9yYXRlcyI6IFsKCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ0eXBlIjogInN1YnNjcmlwdGlvbiIsCiAgICAgICAgICAgICJ1bmlxdWVfaWQiOiAiaWxfMEhsNTY4a0tlNGtGcFliZDlZbWNYSzFZIiwKICAgICAgICAgICAgInVuaXF1ZV9saW5lX2l0ZW1faWQiOiAic2xpX2ExMDU0MjQxNGMxNzg3IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImhhc19tb3JlIjogZmFsc2UsCiAgICAgICAgInRvdGFsX2NvdW50IjogMSwKICAgICAgICAidXJsIjogIi92MS9pbnZvaWNlcy9pbl8wSGw1NjhrS2U0a0ZwWWJkZzVNT1FrSmUvbGluZXMiCiAgICAgIH0sCiAgICAgICJsaXZlbW9kZSI6IGZhbHNlLAogICAgICAibWV0YWRhdGEiOiB7CiAgICAgIH0sCiAgICAgICJuZXh0X3BheW1lbnRfYXR0ZW1wdCI6IG51bGwsCiAgICAgICJudW1iZXIiOiAiNUY1RTQxNzYtMDAwMSIsCiAgICAgICJwYWlkIjogdHJ1ZSwKICAgICAgInBheW1lbnRfaW50ZW50IjogInBpXzBIbDU2OGtLZTRrRnBZYmRJZ2RCanlWQSIsCiAgICAgICJwZXJpb2RfZW5kIjogMTYwNDgwODEwOCwKICAgICAgInBlcmlvZF9zdGFydCI6IDE2MDQ4MDgxMDgsCiAgICAgICJwb3N0X3BheW1lbnRfY3JlZGl0X25vdGVzX2Ftb3VudCI6IDAsCiAgICAgICJwcmVfcGF5bWVudF9jcmVkaXRfbm90ZXNfYW1vdW50IjogMCwKICAgICAgInJlY2VpcHRfbnVtYmVyIjogbnVsbCwKICAgICAgInN0YXJ0aW5nX2JhbGFuY2UiOiAwLAogICAgICAic3RhdGVtZW50X2Rlc2NyaXB0b3IiOiBudWxsLAogICAgICAic3RhdHVzIjogInBhaWQiLAogICAgICAic3RhdHVzX3RyYW5zaXRpb25zIjogewogICAgICAgICJmaW5hbGl6ZWRfYXQiOiAxNjA0ODA4MTA4LAogICAgICAgICJtYXJrZWRfdW5jb2xsZWN0aWJsZV9hdCI6IG51bGwsCiAgICAgICAgInBhaWRfYXQiOiAxNjA0ODA4MTA4LAogICAgICAgICJ2b2lkZWRfYXQiOiBudWxsCiAgICAgIH0sCiAgICAgICJzdWJzY3JpcHRpb24iOiAic3ViX0lMbWZRcEdxVzBQTU50IiwKICAgICAgInN1YnRvdGFsIjogMzAwLAogICAgICAidGF4IjogbnVsbCwKICAgICAgInRheF9wZXJjZW50IjogbnVsbCwKICAgICAgInRvdGFsIjogMzAwLAogICAgICAidG90YWxfZGlzY291bnRfYW1vdW50cyI6IFsKCiAgICAgIF0sCiAgICAgICJ0b3RhbF90YXhfYW1vdW50cyI6IFsKCiAgICAgIF0sCiAgICAgICJ0cmFuc2Zlcl9kYXRhIjogbnVsbCwKICAgICAgIndlYmhvb2tzX2RlbGl2ZXJlZF9hdCI6IDE2MDQ4MDgxMDgKICAgIH0KICBdLAogICJoYXNfbW9yZSI6IGZhbHNlLAogICJ1cmwiOiAiL3YxL2ludm9pY2VzIgp9Cg==
  recorded_at: Sun, 08 Nov 2020 04:01:51 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/events
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_VAHDAHP5CuM2sb","request_duration_ms":613}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:51 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '54405'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_UQdihsqnvj9yAG
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 08 Nov 2020 04:01:52 GMT
- request:
    method: get
    uri: https://api.stripe.com/v1/events
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Stripe/v1 RubyBindings/5.28.0
      Authorization:
      - Bearer aAcnj1rwUlr0eRc4MrHxFvsye3Dd4GXU
      Content-Type:
      - application/x-www-form-urlencoded
      X-Stripe-Client-Telemetry:
      - '{"last_request_metrics":{"request_id":"req_UQdihsqnvj9yAG","request_duration_ms":466}}'
      X-Stripe-Client-User-Agent:
      - '{"bindings_version":"5.28.0","lang":"ruby","lang_version":"2.7.2 p137 (2020-10-01)","platform":"x86_64-darwin19","engine":"ruby","publisher":"stripe","uname":"Darwin
        pat 19.6.0 Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64
        x86_64","hostname":"pat"}'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 08 Nov 2020 04:01:52 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '54405'
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Methods:
      - GET, POST, HEAD, OPTIONS, DELETE
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Request-Id, Stripe-Manage-Version, X-Stripe-External-Auth-Required, X-Stripe-Privileged-Session-Required
      Access-Control-Max-Age:
      - '300'
      Cache-Control:
      - no-cache, no-store
      Request-Id:
      - req_pwp8yNttoRmzYG
      Stripe-Version:
      - '2017-12-14'
      Strict-Transport-Security:
      - max-age=31556926; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 08 Nov 2020 04:01:52 GMT
recorded_with: VCR 6.0.0
